{"name":"nss","body":"## Installation\r\nTo install nss, first you must download the source code (or clone), and then run `make install`.\r\n\r\n```bash\r\n$ git clone git://github.com/kbjr/nss.git\r\n$ cd nss\r\n$ [sudo] make install\r\n```\r\n\r\nAfter installing, you will have a command `nss` that you can use to create your servers.\r\n\r\n## Usage\r\nFirst, you create a new server which will have a document root of the current working directory.\r\n\r\n```bash\r\n$ nss init\r\n```\r\n\r\nYou can then start the server and stop it again when you're done with it.\r\n\r\n```bash\r\n$ nss start\r\n$ nss stop\r\n```\r\n\r\nOnce the server is running, you can request your files at `http://127.0.0.1:1337/`. You can change the port number if you want, as well.\r\n\r\n```bash\r\n$ nss config port 1234\r\n$ nss restart\r\n```\r\n\r\n## Some more advanced features\r\nSo, for the most part, this is just a static file server, but it has a few extra tricks in case you want a little more. For example, you can create a file with the extension `.ejs` and that file will be parsed with [EJS](http://embeddedjs.com/) templating. You can also do a little bit of more dynamic handling if you really want to using the controller editor.\r\n\r\n```bash\r\n$ nss edit\r\n```\r\n\r\nThis will open up an editor with a very simple file that looks like this:\r\n\r\n```javascript\r\nmodule.exports = {\r\n\r\n//\ttest: function(req, res) {\r\n//\t\tres.writeHead(200, {'content-type': 'text/plain'});\r\n//\t\tres.write('Hello, World!');\r\n//\t\tres.end();\r\n//\t}\r\n\r\n};\r\n```\r\n\r\nBy adding functions to this object, you can add handling for specific routes. For example, if you uncommented the `test` function above (and restart the server), the server would respond to the route `/test` by outputting \"Hello, World!\". You can also specify what editor you want to use to edit the controller file by supplying an `--editor` option.\r\n\r\n```bash\r\n$ nss edit --editor=vi\r\n```\r\n\r\n## Cleaning up\r\nWhen you are done with a server, you can get rid of it using `nss destroy`.\r\n\r\n```bash\r\n$ nss destroy\r\n```","tagline":"A CLI utility for easily creating a (mostly) static node.js server on the fly","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}